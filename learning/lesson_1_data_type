#!/usr/bin/env python
# -*- coding:utf-8 -*-

import os
from copy import deepcopy

### string ###
s1 = 's1'
s2 = 's2345'
s3 = "s345"
s4 = ''

print('\n string : \n')
print(s1)
print("this is : %s" % s2)
print("this is {s3}".format(s3=s3))

print('s1+s2: {}'.format(s1+s2))
print('s1[1]: {}'.format(s1[1]))
print('s2[2:3]: {}'.format(s2[2:3]))
print(s1.join(s2))  #trick：用join代替‘+’. join的结果不改变join前后s1，s2的内容。
print s1, s2
# method 1
print('join s1 and s2: {}{}'.format(s1, s2))
# method 2
parts = ['Is', 'Chicago', 'Good?']
print(' '.join(parts))


l9 = [9, 8, 7]
print('t'.join(map(str, l9)))

if 's' in s2:
    print 'yes'
else:
    print 'no'

print('\n')
s4 = '123-asc-567'
s5 = 'j123-asc-567j'
s6 = '123123-asc-567321'
print(s4.split('-')[-1])
print(s4.split('-'))
print(s5.strip('j'))    # 移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。
print(s6.strip('123'))  # 有不匹配的则退出
print(s6.lstrip('123')) # 截掉字符串左边的空格或指定字符
print(s6.upper())
print(len(s6))

print(s4.rfind('-'))    # 返回字符串最后一次出现的位置(从右向左查询)，若没有匹配项则返回-1
print(s4[:s4.rfind('-')])
print(':'.join(s4.split('-')))  # 可实现把 ‘-’ 替换为 ‘:’

print(s1.isalnum())     # 检测字符串是否由字母和数字组成
print(s1.isalpha())     # 检测字符串是否只由字母组成
print(s1.isdigit())     # 检测字符串是否只由数字组成

### list ###
print('\n list : \n')
l1 = [1, 2, 3]
l2 = ['a', [2, 'b']]
print(l1+l2)

if 'a' in l2:
    print 'yes'
else:
    print 'no'

l1 = [1, 2, 3, 2]
l2 = [9]
l3 = [4, 8, 5, 0, 7]
l4 = [8]
l2.append(l3)       # 在列表末尾添加新的对象
print('l2: {}'.format(l2))
# extend , *2(输出2遍)
l4.extend(l3)       # trick：此方法为佳. 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）
print('l4: {}'.format(l4))
print l3.sort()     # list 的 sort 方法返回的是对已经存在的列表进行操作，无返回值; 而内建函数 sorted 方法返回的是一个新的 list，而不是在原来的基础上进行的操作。
print l3
print list(set(l1)) # 去重,不一定排序
print(sorted(l1, reverse=True))   # 对所有可迭代的对象进行排序操作

for index, value in enumerate(l3):
    print(index, value)


### 字典 ###
# has_key 效率不高，少用
print('\n dictionary : \n')
dict = {'k1': 'v1', 'k2': 'v2'}
if 'k1' in dict:
    print('yes')
if 'v1' in str(dict):  # trick
    print('yes')
print str(dict)

# pop //移出
print(dict.pop('k2'))
print dict
dict['k3'] = 'v3'
print dict

# 深拷贝，浅拷贝 //有问题
# 解决：深拷贝（deepcopy）
ls = ['a', 'a', 'a', 'a', 'a']
tmp = ls
for i in tmp:
    print i
    if i == 'a':
        ls.remove(i)
print ls
print tmp


### 元祖 ###
t1 = (1, 2)


### 集合 ###
#与并操作
x = set('runoob')
y = set('google')
print(x & y)
